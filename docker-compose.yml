version: '3.8'

services:
  flask_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_app
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://meu_usuario:123@postgres/meu_banco
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    command: ["gunicorn", "-b", "0.0.0.0:5000", "app:app"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - DATABASE_URL=postgresql://meu_usuario:123@postgres/meu_banco
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: ["celery", "-A", "app.celery", "worker", "--loglevel=info"]

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: meu_usuario
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: meu_banco
    volumes:
      - postgres-volume:/var/lib/postgresql/data

volumes:
  postgres-volume:
